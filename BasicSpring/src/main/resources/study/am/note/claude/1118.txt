1. 파일 업로드:

MultipartFile 객체를 사용하여 파일 처리
enctype="multipart/form-data" 설정 필수
multiple 속성으로 다중 파일 업로드 지원


2. ResultMap과 조인:

association: 1:1 관계 매핑
collection: 1:N 관계 매핑
다양한 조인 타입 활용 (INNER, OUTER, CROSS, NATURAL)


3. 파일 다운로드:

ResponseEntity를 사용하여 파일 다운로드 응답 생성
적절한 헤더 설정으로 다운로드 동작 제어



1. 복합키의 정의:

두 개 이상의 컬럼을 묶어서 하나의 기본키를 구성하는 것
단일 컬럼으로는 고유성을 보장할 수 없을 때 사용


2. 테이블 간의 관계:

부모테이블

기본키(Primary Key)를 가지고 있음
자식테이블과의 관계에서 참조되는 테이블

자식테이블

외래키(Foreign Key)를 가지고 있음
부모테이블의 기본키를 참조
부모테이블과의 관계를 통해 데이터 무결성 유지

3. 핵심 규칙:

부모테이블의 기본키가 자식테이블의 외래키로 전이됨
자식테이블의 외래키는 부모테이블의 기본키를 참조


1. 초기 테이블 구조 (정규화 전):
사원
- 사원번호(PK), 사원명, 부서번호

부서변경
- 부서번호, 부서명, 사원번호, 근무연도


2. 정규화 후 테이블 구조:
사원
- 사원번호(PK), 사원명

부서변경
- 사원번호(PK), 부서번호(PK), 근무연도(PK)

부서
- 부서번호(PK), 부서명


3. 정규화를 통한 변경사항:
데이터 중복 제거 (부서명이 반복되는 문제 해결)
테이블 분리를 통한 데이터 정합성 확보
다대다(N:M) 관계의 명확한 설계
복합키 사용으로 데이터의 유일성 보장


관계:


사원:부서변경 = 1:N
부서:부서변경 = 1:N
결과적으로 사원과 부서는 부서변경 테이블을 통해 N:N 관계를 형성

