1. 페이징 처리의 핵심 개념

1) 기본 구조

SELECT T.RNUM, T.BO_NO, T.BO_TITLE, T.BO_WRITER
     , T.BO_CONTENT, T.BO_DATE, T.BO_HIT
FROM
(
    SELECT ROW_NUMBER() OVER(ORDER BY BO_NO) RNUM
         , BO_NO, BO_TITLE, BO_WRITER, BO_CONTENT, BO_DATE, BO_HIT
    FROM   BOARD
) T
WHERE  T.RNUM BETWEEN 시작값 AND 종료값;


2) 페이지별 시작값과 종료값

1페이지: 1 ~ 10
2페이지: 11 ~ 20
3페이지: 21 ~ 30

시작값 = (현재페이지번호 * 10) - 9
종료값 = (현재페이지번호 * 10)


2. 페이징 계산 로직

1) 전체 페이지 수 계산

// 전체 페이지 수 = 전체 글 수 / 페이지당 표시 수
totalPages = total / size;  // 예: 31 / 10 = 3.1

// 나머지가 있으면 페이지 1 증가
if (total % size > 0) {
    totalPages++;  // 4페이지가 됨
}

2) 블록 시작번호 계산

// 블록 시작번호 = (현재페이지 / 블록크기) * 블록크기 + 1
startPage = currentPage / 5 * 5 + 1;

// 5의 배수 페이지 보정
if (currentPage % 5 == 0) {
    startPage -= 5;
}

3) 5의 배수 문제 예시

예: 현재 페이지가 15일 경우
15 / 5 * 5 + 1 = 16 (잘못된 결과)
보정 적용 후: 11 (정상 결과)


3. JSP에서 자주 사용되는 JSTL

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>

<!-- forEach 사용 예시 -->
<c:forEach var="item" items="${list}" varStatus="status">
    <!-- var: 현재 항목
         items: 반복할 컬렉션
         varStatus: 반복 상태 정보 -->
</c:forEach>


4. 주의사항

1). 5의 배수 페이지 처리가 중요 (15, 25 등)
2). 블록의 시작번호와 종료번호 계산 시 보정이 필요
3). 전체 페이지 수 계산 시 나머지 처리 고려