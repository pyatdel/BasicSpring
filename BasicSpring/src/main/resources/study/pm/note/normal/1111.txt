@Disabled

@DisplayName("수정테스트") // 그냥 테스트 이름 붙이기

외래키란?
ㄴ 참조무결성(잘못된 데이터가 들어가는 걸 막기 위함)

결손데이터를 못들어가게 하는 무결성
insert할 때, 잘못된 데이터가 들어가지 않게 안다.
그런데, 다른 테이블의 데이터를 참조하기 때문에,
참조 무결성이라고 한다

정규화는 db의 중복을 막기 위함..

n:n 규칙은 선호하질 않아서,
1:n으로 바꾼다

interface를 만들면..?
 -top/down 규제를 할 수 있다.
 -다형성 - 여러개 있으면 묶어서 추상화한다

인터페이스를 안만들고 구현체만 만들어도 된다

request를 쓰면 jsp나 템플릿을 거치지 않고 바로 보낸다

get - 읽기 (select)

post - 생성 (insert)

put - 수정 (update)

delete - 삭제 (delete)

rest	url
list	/idols
1개	/idol/idolId

jackson 라이브러리를 바꿀때 자바 객체 로 부른다

promise는 모두 then ~ catch를 받는다
그러나, promise는 두번써야 하는 불편함이 있다.


axios로 바꿔보기
// idol 리스트 가져오기 
    fetch("/api/idols").then(res =>{
        // res.text()
        res.json().then(rslt => {
            console.log("체크", rslt);
            rslt = rslt.sort((a,b)=> a.idolAge - b.idolAge)

            let tblStr = `
                <table border=1>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>이름</th>
                            <th>나이</th>
                            <th>사진</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            for(let i=0; i<rslt.length; i++){
                let idol = rslt[i];
                tblStr += `
                    <tr>
                        <td>${idol.idolId}</td>
                        <td>${idol.idolName}</td>
                        <td>${idol.idolAge}</td>
                        <td>${idol.idolSajin}</td>
                    </tr>
                `;
            }
            tblStr += `</tbody></table>`;
            idolList.innerHTML = tblStr;
        })
    })