//_____________________________________________________________________(11/11)
Lombok, getter/setter, 멤버변수를 public으로 두면 잘못된 값을 제어할 수 없다.
웬만하면 전부 private로 두고 제어를 하자

assertEqual(기대치, 실제값), assertThat  : / 단정

Jackson 자바객체 <==> json 문자열

JUnit(자바side 대표적 테스트 프레임워크) -> Test Framework

Mapper I/F (5가지, ((Insert, Delete, Update), 뮤테이션), (Select, Select, 읽기 2개)) <->SQL => class  
		ㄴ  이렇게 sql과 java를 나누는 걸 ORM이라고 한다, jpa도 있다

sort((a,b) => { +1, -1, 0}) => 제발 한 번 꼭 이해할 시간을 갖자
 ㄴ sort만 매개변수 2개를 사용한다

insert만, @Test(mapper 만들 즈음에 테스트 한 번하면 좋다)

??
@Autowired // 되도록이면 여기에 쓰자
	private IdolMapper idolMapper;

// ajax를 사용할 때는 request 잊기. 

//__________________________________(11/12)

fetch/axios
외래키, 참조무결성 체크(잘못된 데이터가 들어가거나, 삭제되어 엉터리로 되는 걸 막는다.) - 답변 
primary key => 검색 효율 => 중복 없으면 
데이터 중복의 최소화 => 정규화 => 실제 검증 시 잘 안맞으면 반 정규화
get - 조회, post - 생성, put - 수정, delete - 삭제 		restful rest api
@ResponseBody return 결과에 jackson 라이브러리 동작
@RequestBody 브라우저 => 서버로 전달된 json문자열을 자바객체로 바꿔 
@RestController => @Controller + @ResponseBody

//________________________________________(11/13)

Request << Session 생명 주기가 더 길다
event.preventDefault();
ajax사용 시 실제로 form태그는 필요없지만, required등 유효성 체크 속성을 사용하기 위함
파일 업로드 => List<multipartfile>
		 => ajax로 데이터 전송 시 파일이 있다면 무조건 FormData(중요)
		 => FormData는 문자열화 하지 않는다. 그대로
		 	@RequestBody 쓰지 않는다
		 => 물리적 경로 / 웹 경로(가상경로) 맵핑 => 보안을 위해 물리적 경로를 감춘다(보안/DB저장용)
		 => FormData 보낼 때 Content-Type:application/json 쓰지 않는다.(중요)
		 
//_________________________________________________(11/14)
사용자 속성(application.properties). 소문자로만 써야 한다. 카멜표기법 표기, 하이픈 사용
파일 경로(물리적 경로, 웹 경로(가상경로)
** 와 * 차이, Exception 막 던지면 스프링이 알아서
files(FileList) length 가지고 파일 선택 여부
rest get/post/put/delete crud

//_____________________________________________________(11/15)
-. async / await  가독성 굿! 코드 동기처럼 , function을 1개 만들어야 한다
-. 비동기 상황 잘 파악해야 좋은 코드가 나온다 가끔 setTimeout으로 시간을 주어 사기를 친다
-. <selectKey>를 이용하면, VO에 필요한 값이 담긴다
-. mybatis if태그 => 동적 sql resultmap
-. fetch => axios 변환

//_____________________________________________________(11/18)

a tag download는 내 서버에 있는 파일에만 적용됨, 다른 서버(도메인)에 있는 파일에 걸면
그냥 브라우져 새 탭이 열려버림

https://ojsfile.ohmynews.com/STD_IMG_FILE/2023/0508/IE003147553_STD.jpg

-. 웹소켓(양방향, 최초접속은 클라이언트쪽에서 요구)  
   endpoint(설정 -> 중계소), handler, intercepter vs filter, dispatcher
   abstract / interface, ObjectMapper 를 이용해서   json문자열 <=> 자바객체  변환 
   client <-> 서버 웹소켓 전송하는 데이터를 조금 형식화하기
   new WebSocket("ws://localhost:")  손을 좀 씁시다, 머리만 쓰는 건 일반인
   
 //________________________________________________________(11/19)
 
 -. chmod(권한) - rwx  / chown(소유자)
-. source 내용이 실행가능한 파일 , source 대신 .
-. find  시작위치 -name "*.java" 
-. grep -i 찾는문자열 파일1 파일2 파일3 
-. tree ( 유틸개념으로 프로젝트 폴더 구조 보여줄 때 유용)
-.  tar / gzip gunzip   cvf , xvf, xvfz
-. sudo su   최고관리자 root, #
-. ps -aux, ps -ef,    kill 프로세스id(pid) -9,  xkill
-. alias 별명
-. ln -S   원본파일 바로가기파일  
-. touch   개발자는 내용없는 파일명만 만들때 쓰면 유용
-, cd /어쩌구 저쩌구, cd ./../../././././   절대경로/상대경로
   프로젝트 규모가 커지면 절대경로를 쓰는게 관례
   
  //___________________________________________________________(11/20)