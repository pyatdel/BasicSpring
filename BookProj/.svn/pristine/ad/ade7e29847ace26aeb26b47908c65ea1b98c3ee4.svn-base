<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일은 여러개일 수 있음. 
이를 구별하기 위한 식별 용도로 사용 -->
<mapper namespace="kr.or.ddit.mapper.MemberMapper">
	
	<sql id="where">
		<if test="keyword!=null and keyword!=''">
		AND    (
		           MEM_ID   LIKE  '%' || #{keyword} || '%' OR
		           MEM_NAME LIKE  '%' || #{keyword} || '%' OR 
		           MEM_HP   LIKE  '%' || #{keyword} || '%' OR
		           MEM_MAIL LIKE  '%' || #{keyword} || '%' OR 
		           MEM_JOB  LIKE  '%' || #{keyword} || '%' 
		    )
		</if>
	</sql>
	
	<!-- 회원 목록 
	map{currentPage=1&keyword=}
	-->
	<select id="list" parameterType="hashMap" resultType="kr.or.ddit.vo.MemberVO">
		SELECT T.RNUM, T.MEM_ID, T.MEM_PASS, T.MEM_NAME, T.MEM_REGNO1, T.MEM_REGNO2
		    , T.MEM_BIR, T.MEM_ZIP, T.MEM_ADD1, T.MEM_ADD2, T.MEM_HOMETEL
		    , T.MEM_COMTEL, T.MEM_HP, T.MEM_MAIL, T.MEM_JOB, T.MEM_LIKE
		    , T.MEM_MEMORIAL, T.MEM_MEMORIALDAY, T.MEM_MILEAGE, T.MEM_DELETE
		FROM
		(
		    SELECT ROW_NUMBER() OVER(ORDER BY MEM_NAME) RNUM
		         , MEM_ID, MEM_PASS, MEM_NAME, MEM_REGNO1, MEM_REGNO2
		         , MEM_BIR, MEM_ZIP, MEM_ADD1, MEM_ADD2, MEM_HOMETEL
		         , MEM_COMTEL, MEM_HP, MEM_MAIL, MEM_JOB, MEM_LIKE
		         , MEM_MEMORIAL, MEM_MEMORIALDAY, MEM_MILEAGE, MEM_DELETE
		    FROM   MEMBER
		    WHERE  1 = 1
		    <include refid="where"></include>
		) T
		WHERE T.RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
	</select>
	
	<!-- 행의 수
	map{currentPage=1&keyword=}
	public int getTotal(Map<String, Object> map) -->
	<select id="getTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		WHERE 1 = 1
		<include refid="where"></include>
	</select>
	
	<!-- 회원 상세
	public MemberVO detail(String memId) -->
	<select id="detail" parameterType="String" resultType="kr.or.ddit.vo.MemberVO">
		SELECT MEM_ID, MEM_PASS, MEM_NAME, MEM_REGNO1, MEM_REGNO2
		     , MEM_BIR, MEM_ZIP, MEM_ADD1, MEM_ADD2, MEM_HOMETEL
		     , MEM_COMTEL, MEM_HP, MEM_MAIL, MEM_JOB, MEM_LIKE
		     , MEM_MEMORIAL, MEM_MEMORIALDAY, MEM_MILEAGE, MEM_DELETE
		FROM   MEMBER
		WHERE  MEM_ID = #{memId}
	</select>
	
	<!--회원 수정
	public int updatePost(MemberVO memberVO)
	
	MemberVO(memId=t001, memPass=0506, memName=성원태2, 
		memRegno1=null, memRegno2=null, memBir=null, memZip=306-702, 
		memAdd1=대전광역시 중구 유천동, memAdd2=한사랑아파트 302동 504호, 
		memHometel=null, memComtel=null, memHp=null, memMail=null, 
		memJob=null, memLike=null, memMemorial=null, memMemorialday=null, 
		memMileage=0, memDelete=null, rnum=0)
	 -->
	<update id="updatePost" parameterType="kr.or.ddit.vo.MemberVO">
		UPDATE MEMBER
		SET    MEM_PASS = #{memPass}
		     , MEM_NAME = #{memName}
		     , MEM_ZIP = #{memZip}
		     , MEM_ADD1 = #{memAdd1}
		     , MEM_ADD2 = #{memAdd2}
		WHERE  MEM_ID = #{memId}
	</update>
	
	<!-- 회원 등록 실행
	public int createPost(MemberVO memberVO)
	 
	memberVO{memId=t001, memPass=0506, memName=성원태2,
	 			memZip=306-702, 
				memAdd1=대전광역시 중구 유천동, memAdd2=한사랑아파트 302동 504호,
				memBir=2024-11-27}
	-->
	<insert id="createPost" parameterType="kr.or.ddit.vo.MemberVO">
		INSERT INTO MEMBER(MEM_ID, MEM_PASS, MEM_NAME, MEM_BIR, MEM_ZIP
			 , MEM_ADD1, MEM_ADD2)
		VALUES(#{memId},#{memPass},#{memName},#{memBir},#{memZip}
			 , #{memAdd1},#{memAdd2})
	</insert>
	
	<!-- 회원 가입 시 중복체크
	public int idDupChk(MemberVO memberVO) 
	memberVO{memId=a001,memName=null,memBir=null..}
	-->
	<select id="idDupChk" parameterType="kr.or.ddit.vo.MemberVO"
		resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 회원 삭제
	memberVO{memId=a001,memName=null..}
	
	public int deletePostAjax(MemberVO memberVO) -->
	<delete id="deletePostAjax" parameterType="kr.or.ddit.vo.MemberVO">
		DELETE FROM MEMBER WHERE MEM_ID = #{memId}
	</delete>
</mapper>









